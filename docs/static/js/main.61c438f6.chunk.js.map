{"version":3,"sources":["components/CalculatorComponets/CalculatorInput.jsx","components/CalculatorComponets/CalculatorButtons.jsx","globalVariables/typesOfTemperatures.js","components/CalculatorComponets/CalculatorOptions.jsx","components/CalculatorScreen.jsx","utils/utils.js","App.jsx","index.jsx"],"names":["CalculatorInput","inputState","handLeInputChange","value","type","onChange","className","CalculatorButtons","handLeButtonPress","onClick","typesOfTemperatures","temperature1","temperature2","CalculatorOptions","handLeOptionsChange","arrayButtons","CalculatorScreen","useState","setInputState","initialTemp","setInitialTemp","result","setResult","useEffect","unit","toFixed","fahrenheitToCelsius","target","map","i","App","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAkB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,kBAC1C,OACI,uBACAC,MAAQF,EACRG,KAAK,OACLC,SAAWH,EACXI,UAAU,qBCJLC,G,MAAoB,SAAC,GAAkC,IAAhCJ,EAA+B,EAA/BA,MAAOK,EAAwB,EAAxBA,kBACzC,OACI,wBACAF,UAAU,oBACVG,QAAUD,EACVL,MAAQA,EAHR,SAKEA,MCdKO,EACK,UCMXC,EAA8BD,EAAhBE,EDLH,cCOLC,EAAoB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAClC,OACE,yBACAR,UAAU,oBACVG,QAAUK,EAFV,UAGE,wBAAQX,MAAQQ,EAAhB,oCACA,wBAAQR,MAAQS,EAAhB,wCCHAG,G,MAAe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAE3BC,EAAmB,WAAO,IAC9BL,EAAgBD,EADa,EAEAO,mBAAS,IAFT,mBAE7BhB,EAF6B,KAEjBiB,EAFiB,OAGED,mBAASN,GAHX,mBAG7BQ,EAH6B,KAGhBC,EAHgB,OAIRH,mBAAS,GAJD,mBAI7BI,EAJ6B,KAIrBC,EAJqB,KAMpCC,qBAAU,WCVuB,IAACC,EDYlCF,EADIH,IAAgBR,ECTN,MAFoBa,EDYHvB,GCThB,aAES,EAAPuB,EAAS,EAAK,IAAIC,QAAQ,GAfV,SAACD,GAOhC,MALY,KAATA,EACa,aAEe,GAAbA,EAAO,IAAQ,GAAIC,QAAQ,GDmBrCC,CAAqBzB,MAE5B,CAACkB,EAAalB,EAAYU,IAE7BY,qBAAU,WACM,QAAXF,GACDC,EAAU,0BAEX,CAACD,IAEJ,IAAMb,EAAoB,SAAC,GAAgB,IAAdmB,EAAa,EAAbA,OAC3BT,EAAcjB,EAAa0B,EAAOxB,QASpC,OACE,sBAAMG,UAAU,aAAhB,SACE,sBAAKA,UAAU,wBAAf,UACA,oBAAIA,UAAU,mBAAd,wCACE,sBAAKA,UAAU,kBAAf,UACA,cAAC,EAAD,CACAL,WAAaA,EACbiB,cAAgBA,EAChBhB,kBAZoB,SAAC,GAAgB,IAAdyB,EAAa,EAAbA,OAC3BT,EAAeS,EAAOxB,UAalB,cAAC,EAAD,CACAW,oBAlBsB,SAAC,GAAgB,IAAda,EAAa,EAAbA,OAC7BP,EAAeO,EAAOxB,UAmBlB,qBAAKG,UAAU,0BAAf,SAA2Ce,OAE3C,sBAAKf,UAAU,qBAAf,UAEAS,EAAaa,KAAK,SAAAC,GAAC,OACnB,cAAC,EAAD,CACArB,kBAAoBA,EACpBL,MAAQ0B,EAAI,GAFZ,gBAGeA,EAAI,OAEnB,cAAC,EAAD,CACArB,kBAAmB,kBAAMU,EAAc,IACvCf,MAAQ,eEzDD2B,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCHNyB,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.61c438f6.chunk.js","sourcesContent":["//vendor\nimport React from 'react';\n//PropTypes\nimport PropTypes from 'prop-types';\n\nexport const CalculatorInput = ({ inputState, handLeInputChange }) => {\n    return (\n        <input\n        value={ inputState }\n        type=\"text\"\n        onChange={ handLeInputChange }\n        className=\"calculatorInput\"\n        >\n        </input>\n    )\n}\n\nCalculatorInput.propTypes = {\n    handLeInputChange: PropTypes.func.isRequired,\n    inputState: PropTypes.string.isRequired,\n  }\n  \n","//vendor\nimport React from 'react';\n//styles\nimport '../../styles/calculatorButtons.scss'\n//propTypes\nimport PropTypes from 'prop-types'\n\nexport const CalculatorButtons = ({ value, handLeButtonPress }) => {\n  return (\n      <button \n      className=\"calculatorButtons\"\n      onClick={ handLeButtonPress }\n      value={ value }\n      > \n      { value }\n      </button>\n  )\n}\n\nCalculatorButtons.propTypes = {\n  handLeButtonPress: PropTypes.func.isRequired,\n}\n\n","export const typesOfTemperatures = {\n    temperature1: 'celsius',\n    temperature2: 'fahrenheits'\n}","//vendor\nimport React from 'react';\n//globalVariables\nimport { typesOfTemperatures } from '../../globalVariables/typesOfTemperatures';\n//PropTypes\nimport PropTypes from 'prop-types';\n\nconst {temperature1, temperature2} = typesOfTemperatures\n\nexport const CalculatorOptions = ({ handLeOptionsChange }) => {\n  return (\n    <select \n    className=\"calculatorOptions\"\n    onClick={ handLeOptionsChange }>\n      <option value={ temperature1 }>Celsius to fahrenheits</option>\n      <option value={ temperature2 }>Fahrenheits to celsius</option>\n    </select>\n  )\n}\n\nCalculatorOptions.propTypes = {\n  handLeOptionsChange: PropTypes.func.isRequired,\n}\n\n","//vendor\nimport React, { useEffect, useState } from 'react';\n//componets\nimport { CalculatorInput } from './CalculatorComponets/CalculatorInput';\nimport { CalculatorButtons } from './CalculatorComponets/CalculatorButtons';\nimport { CalculatorOptions } from './CalculatorComponets/CalculatorOptions';\n//utils\nimport { celsiusToFahrenheit, fahrenheitToCelsius } from '../utils/utils'\n//styles\nimport '../styles/calculatorScreen.scss';\n//globalVariables\nimport { typesOfTemperatures } from '../globalVariables/typesOfTemperatures';\nconst arrayButtons = [1,2,3,4,5,6,7,8,9,0];\n\nexport const CalculatorScreen = () => {\n  const {temperature1} = typesOfTemperatures;\n  const [inputState, setInputState] = useState('');\n  const [initialTemp, setInitialTemp] = useState(temperature1);\n  const [result, setResult] = useState(0);\n\n  useEffect(() => {\n  if (initialTemp === temperature1 ){\n  setResult(celsiusToFahrenheit( inputState ));\n  }else{\n  setResult(fahrenheitToCelsius( inputState ));\n  }\n  }, [initialTemp, inputState, temperature1]);\n\n  useEffect(() => {\n    if(result === 'NaN'){\n      setResult('Cannot be calculated');\n    }\n  }, [result]);\n\n  const handLeButtonPress = ({ target }) => {\n    setInputState(inputState + target.value);\n  }\n  const handLeOptionsChange = ({ target }) => {\n    setInitialTemp(target.value);\n  }\n  const handLeInputChange = ({ target }) => {\n    setInputState((target.value));\n  }\n\n  return (\n    <main className=\"calculator\">\n      <div className=\"calculator__container\">\n      <h2 className=\"container__title\">Temperature Calculator App</h2>  \n        <div className=\"container__size\">\n        <CalculatorInput\n        inputState={ inputState }\n        setInputState={ setInputState }\n        handLeInputChange={ handLeInputChange }\n        />\n        <CalculatorOptions\n        handLeOptionsChange={ handLeOptionsChange }\n        />\n        <div className=\"calculatorPrint__result\">{ result }</div>\n        </div>\n        <div className=\"container__buttons\">\n        {\n        arrayButtons.map( i => \n        <CalculatorButtons\n        handLeButtonPress={ handLeButtonPress } \n        value={ i + 0 }\n        key={ `button${i + 0}` } />)\n        }\n        <CalculatorButtons\n        handLeButtonPress={() => setInputState(0)}\n        value={ 'C' } />\n        </div>\n      </div>\n    </main>\n  )\n}\n\n\n","export const fahrenheitToCelsius = (unit) => {\n    let fahrenheitToC; \n    if(unit === ''){\n    fahrenheitToC = 'No values'\n    }else{\n    fahrenheitToC = ((unit - 32) * 5/9 ).toFixed(1);\n    }\n    return fahrenheitToC\n} \n\nexport const celsiusToFahrenheit = (unit) => {\n    let celsiusToF;\n    if(unit === ''){\n    celsiusToF = 'No values'\n    }else{\n    celsiusToF = ((unit * 9/5) + 32).toFixed(1);\n    }\n    return celsiusToF\n  }\n\n\n\n\n","import React from 'react';\nimport './styles/App.scss';\nimport { CalculatorScreen } from './components/CalculatorScreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalculatorScreen />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  \n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}