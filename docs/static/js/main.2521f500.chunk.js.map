{"version":3,"sources":["components/CalculatorComponets/CalculatorInput.jsx","components/CalculatorComponets/CalculatorButtons.jsx","globalVariables/typesOfTemperatures.js","components/CalculatorComponets/CalculatorOptions.jsx","components/CalculatorScreen.jsx","utils/utils.js","App.jsx","index.jsx"],"names":["CalculatorInput","inputState","handleInputChange","value","type","onChange","className","CalculatorButtons","handleButtonPress","onClick","typesOfTemperatures","temperature1","temperature2","CalculatorOptions","handleOptionsChange","arrayButtons","CalculatorScreen","useState","setInputState","initialTemp","setInitialTemp","result","setResult","useEffect","unit","toFixed","fahrenheitToCelsius","target","map","i","App","ReactDOM","render","document","getElementById"],"mappings":"2PAKaA,EAAkB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,kBAC5C,OACE,uBACEC,MAAOF,EACPG,KAAK,OACLC,SAAUH,EACVI,UAAU,qBCJHC,G,MAAoB,SAAC,GAAkC,IAAhCJ,EAA+B,EAA/BA,MAAOK,EAAwB,EAAxBA,kBACzC,OACE,wBACEF,UAAU,oBACVG,QAASD,EACTL,MAAOA,EAHT,SAKGA,MCdMO,EACG,UCMRC,EAA+BD,EAAjBE,EDLN,cCOHC,EAAoB,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,oBAClC,OACE,yBAAQR,UAAU,oBAAoBG,QAASK,EAA/C,UACE,wBAAQX,MAAOQ,EAAf,oCACA,wBAAQR,MAAOS,EAAf,wCCDAG,G,MAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAEpCC,EAAmB,WAAO,IAC7BL,EAAiBD,EADW,EAEAO,mBAAS,IAFT,mBAE7BhB,EAF6B,KAEjBiB,EAFiB,OAGED,mBAASN,GAHX,mBAG7BQ,EAH6B,KAGhBC,EAHgB,OAIRH,mBAAS,GAJD,mBAI7BI,EAJ6B,KAIrBC,EAJqB,KAMpCC,qBAAU,WCVuB,IAACC,EDY9BF,EADEH,IAAgBR,ECTT,MAFqBa,EDYAvB,GCTnB,aAES,EAAPuB,EAAY,EAAI,IAAIC,QAAQ,GAfZ,SAACD,GAOlC,MALa,KAATA,EACc,aAEgB,GAAbA,EAAO,IAAW,GAAGC,QAAQ,GDmBpCC,CAAoBzB,MAE/B,CAACkB,EAAalB,EAAYU,IAE7BY,qBAAU,WACO,QAAXF,GACFC,EAAU,0BAEX,CAACD,IAEJ,IAAMb,EAAoB,SAAC,GAAgB,IAAdmB,EAAa,EAAbA,OAC3BT,EAAcjB,EAAa0B,EAAOxB,QASpC,OACE,sBAAMG,UAAU,aAAhB,SACE,sBAAKA,UAAU,wBAAf,UACE,oBAAIA,UAAU,mBAAd,wCACA,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CACEL,WAAYA,EACZiB,cAAeA,EACfhB,kBAZgB,SAAC,GAAgB,IAAdyB,EAAa,EAAbA,OAC3BT,EAAcS,EAAOxB,UAaf,cAAC,EAAD,CAAmBW,oBAjBC,SAAC,GAAgB,IAAda,EAAa,EAAbA,OAC7BP,EAAeO,EAAOxB,UAiBhB,qBAAKG,UAAU,0BAAf,SAA0Ce,OAE5C,sBAAKf,UAAU,qBAAf,UACGS,EAAaa,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CACErB,kBAAmBA,EACnBL,MAAO0B,EAAI,GAFb,gBAGgBA,EAAI,OAGtB,cAAC,EAAD,CACErB,kBAAmB,kBAAMU,EAAc,IACvCf,MAAO,MAET,cAAC,EAAD,CACEK,kBAAmBA,EACnBL,MAAO,eE3DJ2B,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCHNyB,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.2521f500.chunk.js","sourcesContent":["//vendor\nimport React from \"react\";\n//PropTypes\nimport PropTypes from \"prop-types\";\n\nexport const CalculatorInput = ({ inputState, handleInputChange }) => {\n  return (\n    <input\n      value={inputState}\n      type=\"text\"\n      onChange={handleInputChange}\n      className=\"calculatorInput\"\n    ></input>\n  );\n};\n\nCalculatorInput.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n  inputState: PropTypes.string.isRequired,\n};\n","//vendor\nimport React from \"react\";\n//styles\nimport \"../../styles/calculatorButtons.scss\";\n//propTypes\nimport PropTypes from \"prop-types\";\n\nexport const CalculatorButtons = ({ value, handleButtonPress }) => {\n  return (\n    <button\n      className=\"calculatorButtons\"\n      onClick={handleButtonPress}\n      value={value}\n    >\n      {value}\n    </button>\n  );\n};\n\nCalculatorButtons.propTypes = {\n  handleButtonPress: PropTypes.func.isRequired,\n};\n","export const typesOfTemperatures = {\n  temperature1: \"celsius\",\n  temperature2: \"fahrenheits\",\n};\n","//vendor\nimport React from \"react\";\n//globalVariables\nimport { typesOfTemperatures } from \"../../globalVariables/typesOfTemperatures\";\n//PropTypes\nimport PropTypes from \"prop-types\";\n\nconst { temperature1, temperature2 } = typesOfTemperatures;\n\nexport const CalculatorOptions = ({ handleOptionsChange }) => {\n  return (\n    <select className=\"calculatorOptions\" onClick={handleOptionsChange}>\n      <option value={temperature1}>Celsius to fahrenheits</option>\n      <option value={temperature2}>Fahrenheits to celsius</option>\n    </select>\n  );\n};\n\nCalculatorOptions.propTypes = {\n  handleOptionsChange: PropTypes.func.isRequired,\n};\n","//vendor\nimport React, { useEffect, useState } from \"react\";\n//componets\nimport { CalculatorInput } from \"./CalculatorComponets/CalculatorInput\";\nimport { CalculatorButtons } from \"./CalculatorComponets/CalculatorButtons\";\nimport { CalculatorOptions } from \"./CalculatorComponets/CalculatorOptions\";\n//utils\nimport { celsiusToFahrenheit, fahrenheitToCelsius } from \"../utils/utils\";\n//styles\nimport \"../styles/calculatorScreen.scss\";\n//globalVariables\nimport { typesOfTemperatures } from \"../globalVariables/typesOfTemperatures\";\nconst arrayButtons = [1, 2, 3, 4, 5, 6, 7, 8, 9, 0];\n\nexport const CalculatorScreen = () => {\n  const { temperature1 } = typesOfTemperatures;\n  const [inputState, setInputState] = useState(\"\");\n  const [initialTemp, setInitialTemp] = useState(temperature1);\n  const [result, setResult] = useState(0);\n\n  useEffect(() => {\n    if (initialTemp === temperature1) {\n      setResult(celsiusToFahrenheit(inputState));\n    } else {\n      setResult(fahrenheitToCelsius(inputState));\n    }\n  }, [initialTemp, inputState, temperature1]);\n\n  useEffect(() => {\n    if (result === \"NaN\") {\n      setResult(\"Cannot be calculated\");\n    }\n  }, [result]);\n\n  const handleButtonPress = ({ target }) => {\n    setInputState(inputState + target.value);\n  };\n  const handleOptionsChange = ({ target }) => {\n    setInitialTemp(target.value);\n  };\n  const handleInputChange = ({ target }) => {\n    setInputState(target.value);\n  };\n\n  return (\n    <main className=\"calculator\">\n      <div className=\"calculator__container\">\n        <h2 className=\"container__title\">Temperature Calculator App</h2>\n        <div className=\"container__size\">\n          <CalculatorInput\n            inputState={inputState}\n            setInputState={setInputState}\n            handleInputChange={handleInputChange}\n          />\n          <CalculatorOptions handleOptionsChange={handleOptionsChange} />\n          <div className=\"calculatorPrint__result\">{result}</div>\n        </div>\n        <div className=\"container__buttons\">\n          {arrayButtons.map((i) => (\n            <CalculatorButtons\n              handleButtonPress={handleButtonPress}\n              value={i + 0}\n              key={`button${i + 0}`}\n            />\n          ))}\n          <CalculatorButtons\n            handleButtonPress={() => setInputState(0)}\n            value={\"C\"}\n          />\n          <CalculatorButtons\n            handleButtonPress={handleButtonPress}\n            value={\".\"}\n          />\n        </div>\n      </div>\n    </main>\n  );\n};\n","export const fahrenheitToCelsius = (unit) => {\n  let fahrenheitToC;\n  if (unit === \"\") {\n    fahrenheitToC = \"No values\";\n  } else {\n    fahrenheitToC = (((unit - 32) * 5) / 9).toFixed(1);\n  }\n  return fahrenheitToC;\n};\n\nexport const celsiusToFahrenheit = (unit) => {\n  let celsiusToF;\n  if (unit === \"\") {\n    celsiusToF = \"No values\";\n  } else {\n    celsiusToF = ((unit * 9) / 5 + 32).toFixed(1);\n  }\n  return celsiusToF;\n};\n","import React from 'react';\nimport './styles/App.scss';\nimport { CalculatorScreen } from './components/CalculatorScreen';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalculatorScreen />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  \n  <App />,\n\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}